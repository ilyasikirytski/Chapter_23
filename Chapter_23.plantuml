@startuml

title __CHAPTER_23's Class Diagram__\n

  namespace pattern_examples.adapter_pattern_example {
    class pattern_examples.adapter_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.adapter_pattern_example {
    class pattern_examples.adapter_pattern_example.RasterGraphics {
    }
  }
  

  namespace pattern_examples.adapter_pattern_example {
    class pattern_examples.adapter_pattern_example.VectorAdapterFromRaster {
    }
  }
  

  namespace pattern_examples.adapter_pattern_example {
    class pattern_examples.adapter_pattern_example.VectorAdapterFromRaster2 {
    }
  }
  

  namespace pattern_examples.adapter_pattern_example {
    interface pattern_examples.adapter_pattern_example.VectroGraphicsInterface {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    abstract class pattern_examples.bridge_pattern_example.Car {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Coupe {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Hatchback {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Kia {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    interface pattern_examples.bridge_pattern_example.Make {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Mresedes {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Sedan {
    }
  }
  

  namespace pattern_examples.bridge_pattern_example {
    class pattern_examples.bridge_pattern_example.Skoda {
    }
  }
  

  namespace pattern_examples.composite_pattern_example {
    class pattern_examples.composite_pattern_example.Circle {
    }
  }
  

  namespace pattern_examples.composite_pattern_example {
    class pattern_examples.composite_pattern_example.Composite {
    }
  }
  

  namespace pattern_examples.composite_pattern_example {
    class pattern_examples.composite_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.composite_pattern_example {
    interface pattern_examples.composite_pattern_example.Shape {
    }
  }
  

  namespace pattern_examples.composite_pattern_example {
    class pattern_examples.composite_pattern_example.Square {
    }
  }
  

  namespace pattern_examples.composite_pattern_example {
    class pattern_examples.composite_pattern_example.Triangle {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    abstract class pattern_examples.decorator_pattern_example.Decorator {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    class pattern_examples.decorator_pattern_example.LeftBracketDecorator {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    class pattern_examples.decorator_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    class pattern_examples.decorator_pattern_example.Printer {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    interface pattern_examples.decorator_pattern_example.PrinterInterface {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    class pattern_examples.decorator_pattern_example.QuotesDecorator {
    }
  }
  

  namespace pattern_examples.decorator_pattern_example {
    class pattern_examples.decorator_pattern_example.RightBracketDecorator {
    }
  }
  

  namespace pattern_examples.facade_pattern_example {
    class pattern_examples.facade_pattern_example.Computer {
    }
  }
  

  namespace pattern_examples.facade_pattern_example {
    class pattern_examples.facade_pattern_example.DVDRom {
    }
  }
  

  namespace pattern_examples.facade_pattern_example {
    class pattern_examples.facade_pattern_example.HDD {
    }
  }
  

  namespace pattern_examples.facade_pattern_example {
    class pattern_examples.facade_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.facade_pattern_example {
    class pattern_examples.facade_pattern_example.Power {
    }
  }
  

  namespace pattern_examples.flyweight_pattern_example {
    class pattern_examples.flyweight_pattern_example.CircleShape {
    }
  }
  

  namespace pattern_examples.flyweight_pattern_example {
    class pattern_examples.flyweight_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.flyweight_pattern_example {
    class pattern_examples.flyweight_pattern_example.PointShape {
    }
  }
  

  namespace pattern_examples.flyweight_pattern_example {
    interface pattern_examples.flyweight_pattern_example.Shape {
    }
  }
  

  namespace pattern_examples.flyweight_pattern_example {
    class pattern_examples.flyweight_pattern_example.ShapeFactory {
    }
  }
  

  namespace pattern_examples.flyweight_pattern_example {
    class pattern_examples.flyweight_pattern_example.SquareShape {
    }
  }
  

  namespace pattern_examples.proxy_pattern_example {
    interface pattern_examples.proxy_pattern_example.Image {
    }
  }
  

  namespace pattern_examples.proxy_pattern_example {
    class pattern_examples.proxy_pattern_example.Main {
    }
  }
  

  namespace pattern_examples.proxy_pattern_example {
    class pattern_examples.proxy_pattern_example.ProxyImage {
    }
  }
  

  namespace pattern_examples.proxy_pattern_example {
    class pattern_examples.proxy_pattern_example.RealImage {
    }
  }
  

  namespace tasks.task_1 {
    class tasks.task_1.Bicycle {
    }
  }
  

  namespace tasks.task_1 {
    class tasks.task_1.Car {
    }
  }
  

  namespace tasks.task_1 {
    class tasks.task_1.Carriage {
    }
  }
  

  namespace tasks.task_1 {
    class tasks.task_1.Facade {
    }
  }
  

  namespace tasks.task_1 {
    class tasks.task_1.Main {
    }
  }
  

  namespace tasks.task_1 {
    abstract class tasks.task_1.Transport {
    }
  }
  

  namespace tasks.task_2 {
    class tasks.task_2.Main {
    }
  }
  

  pattern_examples.adapter_pattern_example.VectorAdapterFromRaster .up.|> pattern_examples.adapter_pattern_example.VectroGraphicsInterface
  pattern_examples.adapter_pattern_example.VectorAdapterFromRaster -up-|> pattern_examples.adapter_pattern_example.RasterGraphics
  pattern_examples.adapter_pattern_example.VectorAdapterFromRaster2 .up.|> pattern_examples.adapter_pattern_example.VectroGraphicsInterface
  pattern_examples.adapter_pattern_example.VectorAdapterFromRaster2 o-- pattern_examples.adapter_pattern_example.RasterGraphics : rasterGraphics
  pattern_examples.bridge_pattern_example.Car o-- pattern_examples.bridge_pattern_example.Make : make
  pattern_examples.bridge_pattern_example.Coupe -up-|> pattern_examples.bridge_pattern_example.Car
  pattern_examples.bridge_pattern_example.Hatchback -up-|> pattern_examples.bridge_pattern_example.Car
  pattern_examples.bridge_pattern_example.Kia .up.|> pattern_examples.bridge_pattern_example.Make
  pattern_examples.bridge_pattern_example.Mresedes .up.|> pattern_examples.bridge_pattern_example.Make
  pattern_examples.bridge_pattern_example.Sedan -up-|> pattern_examples.bridge_pattern_example.Car
  pattern_examples.bridge_pattern_example.Skoda .up.|> pattern_examples.bridge_pattern_example.Make
  pattern_examples.composite_pattern_example.Circle .up.|> pattern_examples.composite_pattern_example.Shape
  pattern_examples.composite_pattern_example.Composite .up.|> pattern_examples.composite_pattern_example.Shape
  pattern_examples.composite_pattern_example.Square .up.|> pattern_examples.composite_pattern_example.Shape
  pattern_examples.composite_pattern_example.Triangle .up.|> pattern_examples.composite_pattern_example.Shape
  pattern_examples.decorator_pattern_example.Decorator .up.|> pattern_examples.decorator_pattern_example.PrinterInterface
  pattern_examples.decorator_pattern_example.Decorator o-- pattern_examples.decorator_pattern_example.PrinterInterface : component
  pattern_examples.decorator_pattern_example.LeftBracketDecorator -up-|> pattern_examples.decorator_pattern_example.Decorator
  pattern_examples.decorator_pattern_example.Printer .up.|> pattern_examples.decorator_pattern_example.PrinterInterface
  pattern_examples.decorator_pattern_example.QuotesDecorator -up-|> pattern_examples.decorator_pattern_example.Decorator
  pattern_examples.decorator_pattern_example.RightBracketDecorator -up-|> pattern_examples.decorator_pattern_example.Decorator
  pattern_examples.facade_pattern_example.Computer o-- pattern_examples.facade_pattern_example.DVDRom : dvdRom
  pattern_examples.facade_pattern_example.Computer o-- pattern_examples.facade_pattern_example.HDD : hdd
  pattern_examples.facade_pattern_example.Computer o-- pattern_examples.facade_pattern_example.Power : power
  pattern_examples.flyweight_pattern_example.CircleShape .up.|> pattern_examples.flyweight_pattern_example.Shape
  pattern_examples.flyweight_pattern_example.PointShape .up.|> pattern_examples.flyweight_pattern_example.Shape
  pattern_examples.flyweight_pattern_example.SquareShape .up.|> pattern_examples.flyweight_pattern_example.Shape
  pattern_examples.proxy_pattern_example.ProxyImage .up.|> pattern_examples.proxy_pattern_example.Image
  pattern_examples.proxy_pattern_example.ProxyImage o-- pattern_examples.proxy_pattern_example.Image : image
  pattern_examples.proxy_pattern_example.RealImage .up.|> pattern_examples.proxy_pattern_example.Image
  tasks.task_1.Bicycle -up-|> tasks.task_1.Transport
  tasks.task_1.Car -up-|> tasks.task_1.Transport
  tasks.task_1.Carriage -up-|> tasks.task_1.Transport


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
